{"version":3,"sources":["../../../../src/components/ui/data-table/data-table-pagination.tsx"],"sourcesContent":["\"use client\";\n\nimport { Table } from \"@tanstack/react-table\";\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\n\nimport { Button } from \"../button\";\n\ninterface DataTablePaginationProps<TData> {\n  table: Table<TData>;\n}\n\nexport function DataTablePagination<TData>({\n  table,\n}: DataTablePaginationProps<TData>) {\n  return (\n    <div className=\"flex items-center justify-between px-2\">\n      <div className=\"text-muted-foreground flex-1 text-sm\">\n        {table.getFilteredRowModel().rows.length} row(s) total.\n      </div>\n      <div className=\"flex items-center space-x-6 lg:space-x-8\">\n        <div className=\"flex items-center space-x-2\">\n          <p className=\"text-sm font-medium\">Rows per page</p>\n          <select\n            value={table.getState().pagination.pageSize}\n            onChange={(e) => {\n              table.setPageSize(Number(e.target.value));\n            }}\n            className=\"border-input focus:ring-primary h-8 w-[70px] rounded-md border bg-transparent px-2 py-1 text-sm focus:ring-1 focus:outline-none\"\n          >\n            {[10, 20, 30, 40, 50].map((pageSize) => (\n              <option key={pageSize} value={pageSize}>\n                {pageSize}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"flex w-[100px] items-center justify-center text-sm font-medium\">\n          Page {table.getState().pagination.pageIndex + 1} of{\" \"}\n          {table.getPageCount()}\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Button\n            variant=\"outline\"\n            className=\"h-8 w-8 p-0\"\n            onClick={() => table.previousPage()}\n            disabled={!table.getCanPreviousPage()}\n          >\n            <span className=\"sr-only\">Go to previous page</span>\n            <ChevronLeft className=\"h-4 w-4\" />\n          </Button>\n          <Button\n            variant=\"outline\"\n            className=\"h-8 w-8 p-0\"\n            onClick={() => table.nextPage()}\n            disabled={!table.getCanNextPage()}\n          >\n            <span className=\"sr-only\">Go to next page</span>\n            <ChevronRight className=\"h-4 w-4\" />\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["ChevronLeft","ChevronRight","Button","DataTablePagination","table","div","className","getFilteredRowModel","rows","length","p","select","value","getState","pagination","pageSize","onChange","e","setPageSize","Number","target","map","option","pageIndex","getPageCount","variant","onClick","previousPage","disabled","getCanPreviousPage","span","nextPage","getCanNextPage"],"mappings":"AAAA;;AAGA,SAASA,WAAW,EAAEC,YAAY,QAAQ,eAAe;AAEzD,SAASC,MAAM,QAAQ,YAAY;AAMnC,OAAO,SAASC,oBAA2B,EACzCC,KAAK,EAC2B;IAChC,OACE,MAACC;QAAIC,WAAU;;YACb,MAACD;gBAAIC,WAAU;;oBACZF,MAAMG,mBAAmB,GAAGC,IAAI,CAACC,MAAM;oBAAC;;;YAE3C,MAACJ;gBAAIC,WAAU;;oBACb,MAACD;wBAAIC,WAAU;;4BACb,KAACI;gCAAEJ,WAAU;0CAAsB;;4BACnC,KAACK;gCACCC,OAAOR,MAAMS,QAAQ,GAAGC,UAAU,CAACC,QAAQ;gCAC3CC,UAAU,CAACC;oCACTb,MAAMc,WAAW,CAACC,OAAOF,EAAEG,MAAM,CAACR,KAAK;gCACzC;gCACAN,WAAU;0CAET;oCAAC;oCAAI;oCAAI;oCAAI;oCAAI;iCAAG,CAACe,GAAG,CAAC,CAACN,WACzB,KAACO;wCAAsBV,OAAOG;kDAC3BA;uCADUA;;;;oBAMnB,MAACV;wBAAIC,WAAU;;4BAAiE;4BACxEF,MAAMS,QAAQ,GAAGC,UAAU,CAACS,SAAS,GAAG;4BAAE;4BAAI;4BACnDnB,MAAMoB,YAAY;;;oBAErB,MAACnB;wBAAIC,WAAU;;4BACb,MAACJ;gCACCuB,SAAQ;gCACRnB,WAAU;gCACVoB,SAAS,IAAMtB,MAAMuB,YAAY;gCACjCC,UAAU,CAACxB,MAAMyB,kBAAkB;;oCAEnC,KAACC;wCAAKxB,WAAU;kDAAU;;oCAC1B,KAACN;wCAAYM,WAAU;;;;4BAEzB,MAACJ;gCACCuB,SAAQ;gCACRnB,WAAU;gCACVoB,SAAS,IAAMtB,MAAM2B,QAAQ;gCAC7BH,UAAU,CAACxB,MAAM4B,cAAc;;oCAE/B,KAACF;wCAAKxB,WAAU;kDAAU;;oCAC1B,KAACL;wCAAaK,WAAU;;;;;;;;;;AAMpC"}