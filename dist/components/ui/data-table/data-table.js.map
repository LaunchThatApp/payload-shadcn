{"version":3,"sources":["../../../../src/components/ui/data-table/data-table.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  SortingState,\n  useReactTable,\n  VisibilityState,\n} from \"@tanstack/react-table\";\nimport { ChevronDown } from \"lucide-react\";\nimport { LabelFunction } from \"payload\";\n\nimport { Button } from \"../button\";\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuTrigger,\n} from \"../dropdown-menu\";\nimport { Input } from \"../input\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"../table\";\n\ninterface DataTableProps<TData, TValue> {\n  collectionLabel: string;\n  collectionSlug: string;\n  columns: ColumnDef<TData, TValue>[];\n  data: TData[];\n  onRowClick?: (row: TData) => void;\n}\n\nexport function DataTable<TData, TValue>({\n  collectionLabel,\n  collectionSlug,\n  columns,\n  data,\n  onRowClick,\n}: DataTableProps<TData, TValue>) {\n  const router = useRouter();\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\n    [],\n  );\n  const [columnVisibility, setColumnVisibility] =\n    React.useState<VisibilityState>({});\n  const [rowSelection, setRowSelection] = React.useState({});\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnFiltersChange: setColumnFilters,\n    onSortingChange: setSorting,\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n    },\n  });\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"flex items-center justify-between py-4\">\n        <Input\n          placeholder=\"Filter...\"\n          value={(table.getColumn(\"title\")?.getFilterValue() as string) ?? \"\"}\n          onChange={(event) =>\n            table.getColumn(\"title\")?.setFilterValue(event.target.value)\n          }\n          className=\"max-w-sm\"\n        />\n        <div>\n          <Button\n            variant=\"destructive\"\n            onClick={() =>\n              router.push(`/admin/collections/${collectionSlug}/create`)\n            }\n          >\n            Add New {collectionLabel}\n          </Button>\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"outline\" className=\"ml-auto\">\n                Columns <ChevronDown className=\"ml-2 h-4 w-4\" />\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent align=\"end\">\n              {table\n                .getAllColumns()\n                .filter((column) => column.getCanHide())\n                .map((column) => {\n                  return (\n                    <DropdownMenuCheckboxItem\n                      key={column.id}\n                      className=\"capitalize\"\n                      checked={column.getIsVisible()}\n                      onCheckedChange={(value) =>\n                        column.toggleVisibility(!!value)\n                      }\n                    >\n                      {column.id}\n                    </DropdownMenuCheckboxItem>\n                  );\n                })}\n            </DropdownMenuContent>\n          </DropdownMenu>\n        </div>\n      </div>\n      <div className=\"rounded-md border\">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => (\n                  <TableHead key={header.id}>\n                    {header.isPlaceholder\n                      ? null\n                      : flexRender(\n                          header.column.columnDef.header,\n                          header.getContext(),\n                        )}\n                  </TableHead>\n                ))}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow\n                  key={row.id}\n                  data-state={row.getIsSelected() && \"selected\"}\n                  onClick={() => onRowClick?.(row.original)}\n                  className={onRowClick ? \"cursor-pointer\" : \"\"}\n                >\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell key={cell.id}>\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext(),\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell\n                  colSpan={columns.length}\n                  className=\"h-24 text-center\"\n                >\n                  No results.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n      <div className=\"flex items-center justify-end space-x-2 py-4\">\n        <div className=\"flex-1 text-sm text-muted-foreground\">\n          {table.getFilteredSelectedRowModel().rows.length} of{\" \"}\n          {table.getFilteredRowModel().rows.length} row(s) selected.\n        </div>\n        <div className=\"space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.previousPage()}\n            disabled={!table.getCanPreviousPage()}\n          >\n            Previous\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.nextPage()}\n            disabled={!table.getCanNextPage()}\n          >\n            Next\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["React","useRouter","flexRender","getCoreRowModel","getFilteredRowModel","getPaginationRowModel","getSortedRowModel","useReactTable","ChevronDown","Button","DropdownMenu","DropdownMenuCheckboxItem","DropdownMenuContent","DropdownMenuTrigger","Input","Table","TableBody","TableCell","TableHead","TableHeader","TableRow","DataTable","collectionLabel","collectionSlug","columns","data","onRowClick","router","sorting","setSorting","useState","columnFilters","setColumnFilters","columnVisibility","setColumnVisibility","rowSelection","setRowSelection","table","onColumnFiltersChange","onSortingChange","onColumnVisibilityChange","onRowSelectionChange","state","div","className","placeholder","value","getColumn","getFilterValue","onChange","event","setFilterValue","target","variant","onClick","push","asChild","align","getAllColumns","filter","column","getCanHide","map","checked","getIsVisible","onCheckedChange","toggleVisibility","id","getHeaderGroups","headerGroup","headers","header","isPlaceholder","columnDef","getContext","getRowModel","rows","length","row","data-state","getIsSelected","original","getVisibleCells","cell","colSpan","getFilteredSelectedRowModel","size","previousPage","disabled","getCanPreviousPage","nextPage","getCanNextPage"],"mappings":"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"}